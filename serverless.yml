# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: mannvora
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: notes
# "service" is the name of this project. This will also be added to your AWS resource names.
service: note-taking-app

provider:
  name: aws
  runtime: nodejs20.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  httpApi:
    authorizers:
      authorizerFunc:
        path: "/*"
        type: request
        functionName: authorizerFunc


functions:
  authorizerFunc:
    handler: authorizer.handler
  authorizer:
    handler: authorizer.handler
  createNote:
    handler: handler.createNote
    environment:
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:UpdateItem
        Resource: !GetAtt notesTable.Arn
    events:
      - httpApi:
          path: /notes
          method: post
          authorizer:
            name: authorizerFunc
  updateNote:
    handler: handler.updateNote
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - httpApi:
          path: /notes/{id}
          method: put
          authorizer:
            name: authorizerFunc
  deleteNote:
    handler: handler.deleteNote
    environment:
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - httpApi:
          path: /notes/{id}
          method: delete
          authorizer:
            name: authorizerFunc
  getAllNotes:
    handler: handler.getAllNotes
    environment:
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - httpApi:
          path: /notes
          method: get
          authorizer:
            name: authorizerFunc

plugins:
  - serverless-iam-roles-per-function

## You can add cloudformation resources here

resources:
  Resources:
    ${file(resources.yml)}

